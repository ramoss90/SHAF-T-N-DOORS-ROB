-- Kernel Blox Fruit Script v1.0
-- By MedZ (Red Style)

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/vozoid/ui-backups/main/modified.lua"))()
local colors = {
    SchemeColor = Color3.fromRGB(200, 25, 25),
    Background = Color3.fromRGB(15, 15, 15),
    Header = Color3.fromRGB(10, 10, 10),
    TextColor = Color3.fromRGB(255, 255, 255),
    ElementColor = Color3.fromRGB(20, 20, 20)
}

-- Main Window
local Window = Library.CreateLib("Kernel Blox Fruit", colors)
local Main = Window:NewTab("Main")
local FarmSection = Main:NewSection("Auto Farm")
local CombatSection = Main:NewSection("Auto Attack")
local TeleportTab = Window:NewTab("Teleport")
local IslandSection = TeleportTab:NewSection("Island Teleport")

-- Variables
local AutoFarm = false
local AutoAttack = false
local Player = game:GetService("Players").LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- Auto Farm Function
FarmSection:NewToggle("Auto Farm", "Automatically farms nearest enemy", function(state)
    AutoFarm = state
    
    while AutoFarm and wait() do
        if not Character or not Character:FindFirstChild("HumanoidRootPart") then
            Character = Player.Character or Player.CharacterAdded:Wait()
            HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
        end
        
        -- Find nearest enemy
        local nearestEnemy = nil
        local shortestDistance = math.huge
        
        for _, enemy in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
            if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                local distance = (HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestEnemy = enemy
                end
            end
        end
        
        if nearestEnemy then
            -- Teleport above enemy to avoid attacks
            local offset = Vector3.new(0, 10, 0) -- Above enemy
            HumanoidRootPart.CFrame = nearestEnemy.HumanoidRootPart.CFrame + offset
            
            -- Simulate indirect movement to prevent bans
            wait(0.2)
            HumanoidRootPart.CFrame = nearestEnemy.HumanoidRootPart.CFrame + offset + Vector3.new(math.random(-2,2), 10, math.random(-2,2))
        end
    end
end)

-- Auto Attack Function
CombatSection:NewToggle("Auto Attack", "Automatically attacks enemies", function(state)
    AutoAttack = state
    
    while AutoAttack and wait() do
        if not Character or not Character:FindFirstChild("Humanoid") then
            Character = Player.Character or Player.CharacterAdded:Wait()
        end
        
        -- Find nearest enemy
        local nearestEnemy = nil
        local shortestDistance = math.huge
        
        for _, enemy in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
            if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                local distance = (HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestEnemy = enemy
                end
            end
        end
        
        if nearestEnemy then
            -- Simulate attack (this would need to be replaced with actual combat functions)
            game:GetService("VirtualInputManager"):SendKeyEvent(true, "X", false, game)
            wait(0.1)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, "X", false, game)
        end
    end
end)

-- Island Teleport Locations
local Islands = {
    ["Middle Town"] = CFrame.new(-655, 16, 1588),
    ["Sky Island"] = CFrame.new(-4819, 718, -2533),
    ["Pirate Village"] = CFrame.new(-1182, 40, 3856),
    ["Desert"] = CFrame.new(954, 7, 4134),
    ["Frozen Village"] = CFrame.new(1149, 27, -1244),
    ["Marine Fortress"] = CFrame.new(-4915, 33, 4281),
    ["Jungle"] = CFrame.new(-1499, 22, 286)
}

-- Create teleport buttons for each island
for islandName, cf in pairs(Islands) do
    IslandSection:NewButton(islandName, "Teleport to "..islandName, function()
        local tweenTime = 2 -- Medium speed teleport
        local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear)
        
        local tween = game:GetService("TweenService"):Create(
            HumanoidRootPart,
            tweenInfo,
            {CFrame = cf}
        )
        
        tween:Play()
    end)
end

-- Make the window draggable
local UserInputService = game:GetService("UserInputService")
local dragInput, dragStart, startPos

Library.Main.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragStart = input.Position
        startPos = Library.Main.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragStart = nil
            end
        end)
    end
end)

Library.Main.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragStart then
            local delta = input.Position - dragStart
            Library.Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end
end)
